# Khaalis Harvest Platform - Optimized Single-Stage Build for Azure
# Based on working Dockerfile, with memory optimizations for 4GB RAM VMs

FROM node:18-alpine

# Install build dependencies
RUN apk add --no-cache python3 make g++ wget

# Set working directory
WORKDIR /app

# Copy package files first (for better layer caching)
COPY package.json yarn.lock turbo.json ./
COPY apps/backend/package.json ./apps/backend/
COPY apps/web/package.json ./apps/web/
COPY packages/shared/package.json ./packages/shared/

# Install dependencies with memory limit
RUN NODE_OPTIONS="--max-old-space-size=2048" \
    yarn install --frozen-lockfile --network-timeout 600000

# Copy source code (includes public directory)
COPY apps/backend ./apps/backend
COPY apps/web ./apps/web
COPY packages/shared ./packages/shared

# Build backend with memory limit
RUN cd apps/backend && \
    NODE_OPTIONS="--max-old-space-size=1024" \
    yarn build

# Build frontend with memory limit
RUN cd apps/web && \
    NODE_OPTIONS="--max-old-space-size=2048" \
    NEXT_TELEMETRY_DISABLED=1 \
    yarn build

# Create startup script with optimized memory settings
RUN echo '#!/bin/sh' > /app/start.sh && \
    echo 'set -e' >> /app/start.sh && \
    echo 'echo "ðŸš€ Starting Khaalis Harvest Platform..."' >> /app/start.sh && \
    echo 'cd /app/apps/backend && NODE_OPTIONS="--max-old-space-size=512" PORT=${PORT:-3000} yarn start:prod &' >> /app/start.sh && \
    echo 'cd /app/apps/web && NODE_OPTIONS="--max-old-space-size=768" PORT=${FRONTEND_PORT:-3001} yarn start &' >> /app/start.sh && \
    echo 'echo "âœ… Both applications started"' >> /app/start.sh && \
    echo 'wait' >> /app/start.sh && \
    chmod +x /app/start.sh

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost:${PORT:-3000}/api/v1/health || exit 1

# Expose ports
EXPOSE 3000 3001

# Start applications
CMD ["/app/start.sh"]
