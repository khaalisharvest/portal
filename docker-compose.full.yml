version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: livestock-postgres
    environment:
      POSTGRES_DB: livestock_ecosystem
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - livestock-network
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: livestock-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - livestock-network
    restart: unless-stopped

  # Backend API
  backend:
    build:
      context: ./apps/backend
      dockerfile: Dockerfile
    container_name: livestock-backend
    environment:
      NODE_ENV: production
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: password
      DB_NAME: livestock_ecosystem
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      PORT: 3000
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - redis
    networks:
      - livestock-network
    restart: unless-stopped

  # Web Application
  web:
    build:
      context: ./apps/web
      dockerfile: Dockerfile
    container_name: livestock-web
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: http://localhost:3000/api/v1
    ports:
      - "3001:3000"
    depends_on:
      - backend
    networks:
      - livestock-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  livestock-network:
    driver: bridge
