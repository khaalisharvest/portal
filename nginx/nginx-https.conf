# Nginx HTTPS Configuration for Khaalis Harvest Platform - Azure VM Optimized
# Optimized for: 4GB RAM VM, single domain setup, efficient routing
# IMPORTANT: Replace YOUR_DOMAIN.com with your actual domain before use

events {
    worker_connections 512;  # Reduced for 4GB RAM VM
    use epoll;                # Better performance on Linux
}

http {
    # Hide Nginx version
    server_tokens off;

    # Basic settings optimized for 4GB RAM
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 20M;

    # Upstream backend (Docker container on port 3000)
    upstream backend {
        server 127.0.0.1:3000;
        keepalive 32;
    }

    # Upstream frontend (Docker container on port 3001)
    upstream frontend {
        server 127.0.0.1:3001;
        keepalive 32;
    }

    # Rate limiting (memory optimized)
    limit_req_zone $binary_remote_addr zone=api:5m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=web:5m rate=30r/s;

    # SSL Configuration (Modern, secure)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;

    # OCSP Stapling
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_min_length 1000;
    gzip_types text/plain text/css text/xml text/javascript 
               application/json application/javascript application/xml+rss 
               application/x-font-ttf font/opentype 
               image/svg+xml image/x-icon;

    # HTTP to HTTPS redirect
    server {
        listen 80;
        listen [::]:80;
        server_name YOUR_DOMAIN.com www.YOUR_DOMAIN.com;

        # Let's Encrypt ACME challenge
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        # Redirect all HTTP to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }

    # HTTPS Server - Single domain routing
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name YOUR_DOMAIN.com www.YOUR_DOMAIN.com;

        # SSL certificates (Update after Certbot setup)
        ssl_certificate /etc/letsencrypt/live/YOUR_DOMAIN.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/YOUR_DOMAIN.com/privkey.pem;

        # API routes -> Backend (port 3000)
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Connection keep-alive
            proxy_set_header Connection "";
            
            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Static assets with long cache
        location /_next/static/ {
            proxy_pass http://frontend;
            expires 1y;
            add_header Cache-Control "public, immutable";
            access_log off;
        }

        # Images with medium cache
        location /images/ {
            proxy_pass http://frontend;
            expires 30d;
            add_header Cache-Control "public";
            access_log off;
        }

        # Favicon and manifest
        location ~ ^/(favicon.ico|manifest.json|robots.txt)$ {
            proxy_pass http://frontend;
            expires 7d;
            access_log off;
        }

        # Everything else -> Frontend (port 3001)
        location / {
            limit_req zone=web burst=50 nodelay;
            
            proxy_pass http://frontend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Connection keep-alive
            proxy_set_header Connection "";
            
            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
    }
}

